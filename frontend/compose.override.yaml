services:
  frontend:
    build: &default-build
      context: ../
      dockerfile: ./frontend/Dockerfile.dev
      args:
        - NODE_VERSION=${NODE_VERSION} # Gives control and is expanded in the starter service
    init: true # Need to run as PID 1 to handle os signals like SIGTERM to use Watch correctly
    environment: &default-environment
      NODE_ENV: development
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    pull_policy: build
    command:
      [
        "npm",
        "run",
        "dev",
        "--",
        "--host",
        "0.0.0.0",
        "--port",
        "${FRONTEND_PORT}",
      ]
    develop:
      watch:
        - action: sync
          path: ./web
          target: /app
          ignore:
            - node_modules/
            - Dockerfile*
            - compose*.yaml
            - .*ignore
            - .env*
        - action: rebuild
          path: ./web/package.json

  create: 
    # This is a bundler | starter service to create the project the first time
    build:
      <<: *default-build
      target: base     # Common Docker build stage
    environment: *default-environment
    volumes:           # It needs access to the service root dir
      - ./:/app
    command: ["sh", "-c", "npx create-vite web && cd web && npm install"]
    profiles:
      - starter

  cli: 
    # Utility service to run any CLI command
    build:
      <<: *default-build
      target: base
    volumes:
      - ./web:/app
    command: ["npm", "--version"]
    profiles:
      - tooling
